debug: true

# Steps to merge the worlds -------------------------------------------------------------------------------------------
# steps can be "todo", "doing", "done", "failed" or "skip"
# If you don't want a step to be done, set it to "skip"
steps:
  # setupPaperForQuickGeneration: "todo"
  # downloadDependencyPlugins: "todo"
  # generateSurfaceWorld: "todo"
  # setUnderillaAsWorldGenerator: "todo"
  # Remove world folder if it already exists
  # Need a restart before running this step
  underillaGeneration: "todo"
  cleaningBlocks: "todo"
  cleaingEntities: "todo"


# The world to merge the terrain into
final_world: "world"

# The world to copy the surface from
reference_world: "world_surface"

# Set this area to match the surface world coordinates if you want to merge the entire surface world.
# You can do test with a smaller area to speed up the process.
# Each value should be a multiple of 16. The min values are inclusive, the max values are exclusive.
generationArea:
  minX: 0
  minZ: 0
  maxX: 512
  maxZ: 512

# Which world generator to use for the chunks that are out of the surface world.
# Possible values: "VoidWorldGenerator", "VANILLA" or any other world generator plugin name that is installed on your server.
# VANILLA will generate the chunks with the default world generator.
# VoidWorldGenerator will generate void chunks. It's not possible to never generate chunks, so the best way to avoid having blocks outside of the surface world is to use this generator.
outOfTheSurfaceWorldGenerator: "VoidWorldGenerator"

# Weather or not to transfer the reference world's biomes over to the merged world. IF false, only terrain is merged.
transfer_biomes: true

# If true caves block will be transferred from caves_world to the merged world. Else it will be generated from a new vanilla world.
# This is useful if you want to have a custom underground from an existing world. This is mandatory if you wich to transfer underground biomes as "LUSH_CAVES".
transfer_blocks_from_caves_world: false
# If true caves biomes in the list transfered_caves_world_biomes will be transferred from caves_world to the merged world.
transfer_biomes_from_caves_world: false
# Directory where the caves world is stored. It must be in the same directory as the reference world.
caves_world: "world_caves"
# Witch biome to transfer from caves_world to the merged world.
# Biomes must be defined as spigot Biome enum constants or as biome resource key for example `minecraft:plains`. https://hub.spigotmc.org/javadocs/spigot/org/bukkit/block/Biome.html
# Caves world biomes won't be transferred in preserve_biomes.
# Caves world won't be transferred over surface_and_absolute.limit.
transfered_caves_world_biomes:
  - "LUSH_CAVES"
  - "DRIPSTONE_CAVES"
  - "DEEP_DARK"

custom_biome_enabled: false


# How to merge vanilla and reference worlds.
#   - SURFACE: Generation will be based on the custom word surface. It have a top limits with surface_and_absolute.limit and always generate world at least x blocks below the custom world surface (see relative_and_surface.depth). This is the best choice for most cases.
#   - NONE: Just... don't merge. Reference world will be re-generated without vanilla underground.
strategy: "SURFACE"

# RELATIVE strategy exclusive settings
relative:
  # Above this height the RELATIVE strategy will be ignored, and only reference world terrain will be placed.
  # No effect if > 319
  upper_limit: 320
  # Below this height the RELATIVE strategy will be ignored, and only vanilla world terrain will be placed.
  # No effect if <= -64
  lower_limit: -64


# Mix strategy exclusive settings
surface_and_absolute:
  # The Y height dividing reference terrain above and vanilla worlds below.
  # Increasing this value way above 60 won't have much effect as the caves are only generated in vanilla world.
  limit: 60

# How deep reference world terrain should dig into vanilla word.
surface:
  depth: 6


ignored_block_for_surface_calculation:
  - .*LEAVES
  - .*LOG
  - .*WOOD
  - .*PLANKS
  - .*FENCE
  - ICE

# The biomes where vanilla underground will not be generated.
# Biomes must be defined as spigot Biome enum constants or as biome resource key for example `minecraft:plains`. https://hub.spigotmc.org/javadocs/spigot/org/bukkit/block/Biome.html
preserve_biomes: []

# Weather or not to allow vanilla Minecraft populate/decorate over the reference world.
vanilla_population: true

# Weather or not to keep ores from reference world underground.
# It is usefull when vanilla_population is set to false.
kept_reference_world_blocks: []

structures:
  # Weather or not to allow vanilla Minecraft generate structures in the world.
  enabled: true
  # Structures defines here won't ever generate, regardless of the above setting.
  # Must be defined as Structure enum from Spigot API: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/generator/structure/Structure.html
  # Example: ["MONUMENT","FORTRESS"]
  blacklist: []

# Carvers -------------------------------------------------------------------------------------------------------------
carvers:
  # Weather or not to allow vanilla Minecraft generate carvers in the world. It will use datapack carvers if specific carvers are defined in the biome .json files of a datapack.
  enabled: true
  # Apply carvers with special rules on the biomes listed here.
  # If both onlyOn and exceptOn are empty, the carvers will be applied on all biomes. 
  # Do not use both onlyOn and exceptOn at the same time.
  # The carvers will be applied once per chunk. So it might carve or not a chunk that have different biomes.
  applyCarversOnBiomes:
    # Apply carvers only on the biomes listed here.
    onlyOn: []
    # Apply carvers on all biomes except the ones listed here.
    exceptOn: []
  
  # If true the carvers will be applied before copying the reference world to the final world.
  # So the surface will not be carved by the carvers.
  preserveSurfaceWorldFromCavers: true
  # Preserve the surface world from cavers with special rules on the biomes listed here.
  # If both onlyOn and exceptOn are empty, the carvers will be applied on all biomes.
  # Do not use both onlyOn and exceptOn at the same time.
  preserveSurfaceWorldFromCaversOnBiomes:
    # Preserve the surface world from cavers only on the biomes listed here.
    onlyOn: []
    # Preserve the surface world from cavers on all biomes except the ones listed here.
    exceptOn: []